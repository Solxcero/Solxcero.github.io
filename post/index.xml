<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 漸入佳境</title>
    <link>/post/</link>
    <description>Recent content in Posts on 漸入佳境</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Nov 2024 10:45:44 +0900</lastBuildDate>
    <atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>드디어 @classmethod를 써본다</title>
      <link>/post/classmethod/</link>
      <pubDate>Fri, 01 Nov 2024 10:45:44 +0900</pubDate>
      <guid>/post/classmethod/</guid>
      <description>배운 것을 실제로 내가 하고자하는 일에 적용했을 때의 쾌감이란&#xA;@classmethod는 하나의 객체 내에서만 사용되는 것이 아니라 해당 클래스로 생성된 인스턴스 전체가 공유하는 함수라고 배웠었다.&#xA;물론 간단한 실습은 했었지만 실제로 언제 사용하게 될지 궁금했었는데, 이번에 연구과제 프로젝트를 수행하면서 드디어 써봤다 우히히힣ㅎㅎ&#xA;왜 쓰게 됐냐면,&#xA;화력발전소에는 A~F 까지 총 6대의 미분기가 존재한다.&#xA;그래서 당연히 미분기 Class를 만들고, 6개의 객체를 생성해서 각 미분기에 부여된 id 값으로 테이블에서 조회 후 계산 결과를 다시 테이블에 저장하고 있었다.</description>
    </item>
    <item>
      <title>Style 배분 전략</title>
      <link>/post/styleindex/</link>
      <pubDate>Sat, 13 Jul 2024 09:21:19 +0900</pubDate>
      <guid>/post/styleindex/</guid>
      <description>S&amp;amp;P U.S. Style Indices Methodology 예전에 &amp;lsquo;포트폴리오 구축&amp;rsquo;을 주제로 팀프로젝트를 한 적이 있는데, 그 때 S&amp;amp;P U.S. Style Indices Methodology 문서를 참고하여 파이썬으로 가치/성장 스타일 투자를 구현한 경험이 있다.&#xA;이 방법론의 핵심은&#xA;모든 종목에는 가치주의 성격과 성장주의 성격이 혼합되어 있고, 둘 중 어느 쪽에 더 치우쳐져있는지를 가치점수(Value Score) 와 성장점수(Growth Score)판단하겠다는 아이디어&#xA;라고 보면 된다.&#xA;소스코드 : &amp;nbsp;&amp;nbsp;|&amp;nbsp;프로젝트 Repo : 성장이 뭐죠? 가치는요? 성장주의 핵심은 미래의 성장 가능성을 높게 평가하고, 주가 상승을 통해 수익을 실현하는 것</description>
    </item>
    <item>
      <title>IF문의 오버헤드</title>
      <link>/post/ifoverhead/</link>
      <pubDate>Sat, 06 Jul 2024 22:00:55 +0900</pubDate>
      <guid>/post/ifoverhead/</guid>
      <description>백준 BOJ거리 문제를 풀다가 BOJ 거리 문제는 DP 알고리즘 문제로 B,O,J 블록을 순서대로 점프하면서 최소한의 에너지로 종료지점에 도착해야하는 문제이다. 문제링크&#xA;아래는 내가 짠 코드이다.&#xA;import sys input = sys.stdin.readline N = int(input()) blocks = str(input().strip()) jump_order = {&amp;#39;B&amp;#39;:&amp;#39;O&amp;#39;,&amp;#39;O&amp;#39;:&amp;#39;J&amp;#39;,&amp;#39;J&amp;#39;:&amp;#39;B&amp;#39;} max_energy = 999*999 + 1 # 소요된 에너지를 저장 -&amp;gt; 최솟값 업데이트를 위해 최댓값으로 저장 dp = [max_energy] * N dp[0] = 0 # 처음 위치에서 에너지 0 -&amp;gt; 즉, dp[i] 는 i칸에 가기 위한 에너지의 최솟값 for i in range(N): if dp[i] == max_energy: continue for j in range(i+1,N): if blocks[j] == jump_order[blocks[i]]: dp[j] = min(dp[j],(j-i)*(j-i)+dp[i]) # print(dp) print(dp[-1] if dp[-1] !</description>
    </item>
    <item>
      <title>포스팅 이미지 팝업으로 보기</title>
      <link>/post/imagebox/</link>
      <pubDate>Fri, 03 May 2024 10:41:44 +0900</pubDate>
      <guid>/post/imagebox/</guid>
      <description>네이버나 티스토리 블로그의 주요 기능 중에 하나가 이미지를 클릭하면 이미지가 팝업으로 뜨는 효과이다.&#xA;Hugo 의 경우 이미지를 넣을 때 html의 a 태그를 사용하여 새로운 링크로 이미지를 띄울 수 있긴한데, 나는 팝업 효과를 원했다.&#xA;그래서 내가 직접 기능을 추가해보려고 한다.&#xA;사실 아직 Hugo 구조를 잘 몰라서..ㅋㅎㅎㅎ GPT의 도움을 받았다.&#xA;head.html에 Lightbox Library 추가하기 Ligthbox가 이미지를 띄워주는 기능인가 보다.&#xA;작업 파일의 경로는 layouts &amp;gt; partials &amp;gt; head.html의 &amp;lt;head&amp;gt; 태그 안에 아래 코드를 넣어주면 된다.</description>
    </item>
    <item>
      <title>Hugo로 GitBlog 만들기</title>
      <link>/post/blog/</link>
      <pubDate>Wed, 03 Apr 2024 10:41:44 +0900</pubDate>
      <guid>/post/blog/</guid>
      <description>Hugo 블로그. 깃허브 블로그 테마 유목민이던 내가 드디어 맘에 드는 테마를 발견했는데, 기존에 사용하던 Jekyll가 아닌 Hugo 기반이다.&#xA;Hugo는 처음이기 때문에 공부도 하고, 혹시나 복기가 필요할 때 참고하기 위해 포스팅을 하려고 한다. Hugo Documentation&#xA;Hugo 설치 (Windows 기준)&#xA;hugo release 에서 가장 최신 버전을 다운받는다. 로컬PC에 Hugo 프로젝트 파일을 담을 폴더를 생성 (C:/Hugo) C:/Hugo/bin 디렉토리 생성 후 설치 파일 압축 해제 하여 넣기 C:/Hugo/bin 환경변수에 추가 -&amp;gt; cmd에 hugo version 입력하여 Path 추가 되었는지 확인 Hugo Local 실행 1.</description>
    </item>
  </channel>
</rss>
